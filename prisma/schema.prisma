generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Sport {
  id Int @id @default(autoincrement())
  title String
  key String @unique

  positions Position[]
  teams Team[]

  @@map("sports")
}

model Team {
  id Int @id @default(autoincrement())
  title String
  key String
  sport Sport @relation(fields: [sportId], references: [id])
  sportId Int

  teamMembers TeamMember[]
  teamSheets TeamSheet[]

  @@unique([key, sportId])
  @@map("teams")
}

model TeamSheet {
  id String @id @default(uuid())
  data Json?
  team Team @relation(fields: [teamId], references: [id])
  teamId Int

  @@map("teamSheets")
}

model Player {
  id Int @id @default(autoincrement())
  key String @unique
  title String
  firstname String
  lastname String

  playerPositions PlayerPosition[]
  teamMembers TeamMember[]

  @@map("players")
}

model TeamMember {
  id Int @id @default(autoincrement())
  team Team @relation(fields: [teamId], references: [id])
  teamId Int
  player Player @relation(fields: [playerId], references: [id])
  playerId Int 
  
  @@map("teamMembers")
}

model Position {
  id Int @id @default(autoincrement())
  sport Sport @relation(fields: [sportId], references: [id])
  sportId Int
  key String @unique // position name i.e. 'prop'
  numbers Int[] // jersey numbers for the position. I.e. 'prop' can be [1,3]
  title String // position name i.e. 'Prop'
  category String // 'Forward' or 'Back'

  PlayerPositions PlayerPosition[]

  @@map("positions")
}

model PlayerPosition {
  id Int @id @default(autoincrement())
  player Player @relation(fields: [playerId], references: [id])
  playerId Int
  position Position @relation(fields: [positionId], references: [id])
  positionId Int 
  
  @@map("playerPositions")
}

